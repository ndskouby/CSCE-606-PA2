<p style="color: green"><%= notice %></p>

<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
  }
  h1 {
    color: #333;
    text-align: center;
    margin-top: 20px;
  }
  table {
    border-collapse: collapse;
    width: 80%;
    margin: 20px auto;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  th, td {
    text-align: left;
    padding: 8px;
    border-bottom: 1px solid #ddd;
  }
  th {
    background-color: #45a049;
    cursor: pointer; 
  }
  tr:hover {
    background-color: #ddd;
  }
  .sorted-asc {
    background-color: lightblue;
  }
  .sorted-desc {
    background-color: lightcoral; 
  }
  .asc:after {
    content: '\25b2'; 
    padding-left: 5px;
  }
  .desc:after {
    content: '\25bc'; 
    padding-left: 5px;
  }
  .new-link {
    text-align: center;
    margin-top: 20px;
  }
  .new-link a {
    display: inline-block;
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.3s;
    margin-right: 10px;
  }
  .new-link a:hover {
    text-decoration: underline;
    background-color: #45a049;
  }
</style>

<h1>Movies</h1>

<table id="myTable">
  <thead>
    <tr>
      <th onclick="sortTable(0, 'text')">Title</th>
      <th onclick="sortTable(1, 'rating')">Rating</th>
      <th onclick="sortTable(2, 'date')">Release Date</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @movies.each do |movie| %>
      <tr>
        <td><%= movie.title %></td>
        <td><%= movie.rating %></td>
        <td><%= movie.release_date.strftime('%B %d, %Y') %></td>
        <td><%= link_to 'Show', movie %></td>
        <td><%= link_to 'Edit', edit_movie_path(movie) %></td>
        <td><%= link_to 'Destroy', movie, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
  <tfoot>
  <tr>
    <td colspan="3">Total Movies: <%= @movies.count %></td>
    <td colspan="3"></td>
  </tr>
</tfoot>
</table>

<br>

<div class="new-link">
  <%= link_to "New movie", new_movie_path %>
</div>

<script>
var sortOrder = sessionStorage.getItem('sortOrder');
var lastSort = sessionStorage.getItem('lastSort')
if (!sortOrder) {
  sortOrder = Array(3).fill(1);
} else {
  sortOrder = JSON.parse(sortOrder);
  var lastSortedColumn = lastSort;
  sortTable(lastSort);
}


function sortTable(columnIndex) {
  console.log("sorting by " + columnIndex +" "+sortOrder[columnIndex]);
  let table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("myTable");
  switching = true;
  while (switching) {
    switching = false;
    rows = table.rows;
    for (i = 1; i < (rows.length - 2); i++) {
      shouldSwitch = false;
      x = rows[i].getElementsByTagName("td")[columnIndex];
      y = rows[i + 1].getElementsByTagName("td")[columnIndex];
      let comparison = compareValues(x.textContent.trim(), y.textContent.trim(), columnIndex);
      if (comparison > 0 && sortOrder[columnIndex] == 1 || comparison < 0 && sortOrder[columnIndex] == -1) {
        shouldSwitch = true;
        break;
      }
    }
    if (shouldSwitch) {
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }

  sortOrder[columnIndex] *= -1;
  sessionStorage.setItem('sortOrder', JSON.stringify(sortOrder))
  sessionStorage.setItem('lastSort', columnIndex)

  if (lastSortedColumn !== null) {
    let previousSortedHeader = document.querySelector(`th:nth-child(${lastSortedColumn + 1})`);
    if (previousSortedHeader) {
      previousSortedHeader.classList.remove('sorted-asc', 'sorted-desc', 'asc', 'desc');
    }
  }
  

  let currentSortedHeader = document.querySelector(`th:nth-child(${columnIndex + 1})`);
  if (currentSortedHeader) {
    if (sortOrder[columnIndex] === 1) {
      currentSortedHeader.classList.add('sorted-asc', 'asc');
    } else {
      currentSortedHeader.classList.add('sorted-desc', 'desc');
    }
  }
  
  lastSortedColumn = columnIndex;
}

function compareValues(value1, value2, columnIndex) {
  if (columnIndex == 2) {
    return new Date(value1) - new Date(value2);
  } else if (columnIndex == 1) {
    const ratingOrder = ['G', 'PG', 'PG-13', 'R'];
    return ratingOrder.indexOf(value1) - ratingOrder.indexOf(value2);
  } else {
    return value1.localeCompare(value2);
  }
}

function applySortOrder() {
  var storedSortOrder = sessionStorage.getItem('sortOrder');
  var storedLastSort = sessionStorage.getItem('lastSort')
  if (storedSortOrder) {
    sortOrder = JSON.parse(storedSortOrder);
    sortTable(storedLastSort);
  }
}

window.addEventListener('load', function(event) {
  applySortOrder();
});

</script>
